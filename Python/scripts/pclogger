#!/usr/bin/python

import traceback
import time
import logging
import paho.mqtt.publish as publish

from PoolController.bluetooth_setup import pool_chars

logger = logging.getLogger('pclogger')
logger.setLevel(logging.DEBUG)
ch = logging.StreamHandler()
ch.setLevel(logging.DEBUG)
# create formatter and add it to the handlers
formatter = logging.Formatter("%(asctime)s - %(name)s - "
                              "%(levelname)s - %(message)s")
ch.setFormatter(formatter)
logger.addHandler(ch)

from PoolController.logger import (read_config,
                                   read_controller,
                                   send_to_keen_io)


if __name__ == "__main__":
    logger.info("Started logging daemon")
    cfg = read_config('/etc/pool_controller.yaml')
    while True:
        try:
            results = read_controller(cfg['controller']['mac_address'],
                                      pool_chars)
        except Exception as e:
            traceback.print_exc()
            logger.critical("Unable to read controller")
            continue

        try:
            event = dict()
            for c in results.values():
                event[c['ev_name']] = c['value']
            send_to_keen_io(event)
        except Exception as e:
            traceback.print_exc()
            logger.critical("Unable to upload to keen.io")

        pub = list()
        for c in results:
            if 'mqtt_topic' in c:
                p = dict()
                p['topic'] = c['mqtt_topic']
                p['payload'] = c['value']
                pub.append(p)

        print(pub)
        publish.multiple(pub, hostname='192.168.1.2')

        # Sleep here and update as we go
        for n in range(5*6, -1, -1):
            logger.info("Sleeping ... %d seconds until update", n*10)
            time.sleep(10)
